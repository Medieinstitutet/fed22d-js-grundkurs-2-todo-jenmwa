(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const c of n)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&r(m)}).observe(document,{childList:!0,subtree:!0});function l(n){const c={};return n.integrity&&(c.integrity=n.integrity),n.referrerpolicy&&(c.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?c.credentials="include":n.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(n){if(n.ep)return;n.ep=!0;const c=l(n);fetch(n.href,c)}})();let t=[];const g=document.querySelector(".tasks"),a=document.querySelector("#inputTaskField"),i=document.querySelector("#deadlineInput"),S=document.querySelector("#submit"),y=document.querySelector("#sortSection"),p=document.querySelector("#taskError"),k=new Date,h=document.querySelector("#todaysDate");h.innerHTML=k.toLocaleDateString();function v(){if(a.value.length===0||i.value===""){p.innerHTML="Fyll i Todo & deadline!";return}else if(a.value.length>=2&&i!=""){console.log(t.indexOf),p.innerHTML="";const e=document.querySelector("input[name='category']:checked").value;let o={task:a.value,deadline:i.value,addedDate:k,category:e,isComplete:!1};t.push(o),f(t),a.value="",i.value=""}}function s(e){g.innerHTML="";for(let r=0;r<e.length;r++){const n=e[r].isComplete?"checked":"";g.innerHTML+=`
        <li data-id="${r}" class="${n}"> <div class="licontainer">
        <input type="checkbox" name="checkbox" class="checkbox"data-id="${r}">
        <span class="text" id="texttodo">${e[r].task}</span><br>
        <span class="text"> ${e[r].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined category">${e[r].category}</span>
        <button class="material-symbols-outlined" data-id="${r}">close</button>
        </div>
        </li>`}console.log(e),T(),Array.from(document.querySelectorAll(".tasks button")).forEach(r=>{r.addEventListener("click",b)}),Array.from(document.querySelectorAll(".tasks input")).forEach(r=>{r.addEventListener("change",L)})}function L(e){const o=t.findIndex(l=>l.task===e.currentTarget.nextElementSibling.innerHTML);console.log(e.currentTarget.nextElementSibling),t[o].isComplete===!0&&(e.currentTarget.nextElementSibling.classList.add("checked"),console.log(e.currentTarget)),D()}function T(){t.length<=1&&y.classList.remove("open"),t.length>=2&&y.classList.add("open")}function b(e){const o=e.currentTarget.dataset.id;o>-1&&(t.splice(o,1),s(t)),f(t)}let d=!0,u=!0;const B=document.querySelector("#sortByNameBtn"),x=document.querySelector("#sortByDeadlineBtn");function q(e){console.log(t),e.preventDefault(),d?(t.sort((o,l)=>o.task.localeCompare(l.task)),d=!1):d===!1&&(t.sort((o,l)=>l.task.localeCompare(o.task)),d=!0),s(t),f(t),console.log("klick")}function E(e){console.log("clicketiclick"),console.log(t),e.preventDefault(),u?(t.sort((o,l)=>l.deadline.localeCompare(o.deadline)),u=!1):u===!1&&(t.sort((o,l)=>o.deadline.localeCompare(l.deadline)),u=!0),s(t),f(t)}function D(){console.log("clickt"),console.log(t)}B.addEventListener("click",q);x.addEventListener("click",E);function f(e){localStorage.setItem("taskList",JSON.stringify(e)),s(e)}function C(){const e=localStorage.getItem("taskList");e&&(t=JSON.parse(e),s(t))}C();S.addEventListener("click",function(e){e.preventDefault(),v()});
