(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const c of s)if(c.type==="childList")for(const f of c.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&n(f)}).observe(document,{childList:!0,subtree:!0});function a(s){const c={};return s.integrity&&(c.integrity=s.integrity),s.referrerpolicy&&(c.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?c.credentials="include":s.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function n(s){if(s.ep)return;s.ep=!0;const c=a(s);fetch(s.href,c)}})();let t=[];const p=document.querySelector(".tasks"),l=document.querySelector("#inputTaskField"),y=document.querySelector("#deadlineInput"),v=document.querySelector("#submit"),g=document.querySelector("#sortSection"),h=new Date,L=document.querySelector("#todaysDate");L.innerHTML=h.toLocaleDateString();const k=document.getElementsByClassName("material-symbols-outlined");for(var m=0;m<k.length;m++)k[m].addEventListener("click",function(){this.classList.add("check")});function D(){if(l.value.length!==0&&t.indexOf(l.value)===-1){const e=document.querySelector("input[name='category']:checked").value,o={task:l.value,deadline:y.value,addedDate:h,category:e,isComplete:!1};t.push(o),S(t),l.value="",y.value=""}}console.log(t);function r(e){p.innerHTML="";for(let n=0;n<e.length;n++)p.innerHTML+=`
        <li data-id="${n}"> <div>
        <input type="checkbox" name="checkbox" class="checkbox" data-id="${n}" ${e[n].isComplete}>
        <span class="text" id="texttodo">${e[n].task}</span><br>
        <span class="text">deadline: ${e[n].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined" id="favorite">${e[n].category}</span>
        <button class="material-symbols-outlined" data-id="${n}">close</button>
        </div>
        </li>`;b(),Array.from(document.querySelectorAll(".tasks button")).forEach(n=>{n.addEventListener("click",q)}),Array.from(document.querySelectorAll(".tasks input")).forEach(n=>{n.addEventListener("click",B)})}function B(e){this.checked===!1&&e.currentTarget.parentElement.classList.remove("checked"),this.checked===!0&&e.currentTarget.parentElement.classList.add("checked"),console.log("click",e.currentTarget.dataset.id),console.log(t)}function b(){t.length<=1&&g.classList.remove("open"),t.length>=2&&g.classList.add("open")}function q(e){const o=e.currentTarget.dataset.id;o>-1&&(t.splice(o,1),r(t)),S(t)}let i=!0,d=!0,u=!0;const E=document.querySelector("#sortByDateBtn"),T=document.querySelector("#sortByNameBtn"),C=document.querySelector("#sortByDeadlineBtn");function N(e){console.log("clicketi"),console.log(t),e.preventDefault(),i?(t.sort((o,a)=>o.addedDate.localeCompare(a.addedDate)),i=!1):i===!1&&(t.sort((o,a)=>a.addedDate.localeCompare(o.addedDate)),i=!0),r(t)}function I(e){console.log(t),e.preventDefault(),d?(t.sort((o,a)=>o.task.localeCompare(a.task)),d=!1):d===!1&&(t.sort((o,a)=>a.task.localeCompare(o.task)),d=!0),r(t),console.log("klick")}function x(e){console.log("clicketiclick"),console.log(t),e.preventDefault(),u?(t.sort((o,a)=>a.deadline.localeCompare(o.deadline)),u=!1):u===!1&&(t.sort((o,a)=>o.deadline.localeCompare(a.deadline)),u=!0),r(t)}E.addEventListener("click",N);T.addEventListener("click",I);C.addEventListener("click",x);function S(e){localStorage.setItem("taskList",JSON.stringify(e)),r(e)}function O(){const e=localStorage.getItem("taskList");e&&(t=JSON.parse(e),r(t))}O();v.addEventListener("click",function(e){e.preventDefault(),D()});
