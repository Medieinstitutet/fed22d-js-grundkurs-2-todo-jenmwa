(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const c of n)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&s(m)}).observe(document,{childList:!0,subtree:!0});function l(n){const c={};return n.integrity&&(c.integrity=n.integrity),n.referrerpolicy&&(c.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?c.credentials="include":n.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function s(n){if(n.ep)return;n.ep=!0;const c=l(n);fetch(n.href,c)}})();let e=[];const p=document.querySelector(".tasks"),i=document.querySelector("#inputTaskField"),g=document.querySelector("#deadlineInput"),S=document.querySelector("#submit"),k=document.querySelector("#sortSection"),v=new Date,D=document.querySelector("#todaysDate");D.innerHTML=v.toLocaleDateString();const h=document.getElementsByClassName("material-symbols-outlined");for(var y=0;y<h.length;y++)h[y].addEventListener("click",function(){this.classList.add("check")});function B(){if(i.value.length!==0&&e.indexOf(i.value)===-1){const t=document.querySelector("input[name='category']:checked").value,o={task:i.value,deadline:g.value,addedDate:v,category:t,isComplete:!1};e.push(o),r(e),i.value="",g.value=""}}console.log(e);function a(t){p.innerHTML="";for(let s=0;s<t.length;s++){const n=t[s].isComplete?"checked":"";p.innerHTML+=`
        <li data-id="${s}" class="${n}"> <div>
        <input type="checkbox" name="checkbox" class="checkbox" data-id="${s}">
        <span class="text" id="texttodo">${t[s].task}</span><br>
        <span class="text">deadline: ${t[s].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined" id="favorite">${t[s].category}</span>
        <button class="material-symbols-outlined" data-id="${s}">close</button>
        </div>
        </li>`}console.log(t),b(),Array.from(document.querySelectorAll(".tasks button")).forEach(s=>{s.addEventListener("click",q)}),Array.from(document.querySelectorAll(".tasks input")).forEach(s=>{s.addEventListener("click",L)})}function L(){console.log(e)}function b(){e.length<=1&&k.classList.remove("open"),e.length>=2&&k.classList.add("open")}function q(t){const o=t.currentTarget.dataset.id;o>-1&&(e.splice(o,1),a(e)),r(e)}let d=!0,u=!0,f=!0;const C=document.querySelector("#sortByDateBtn"),E=document.querySelector("#sortByNameBtn"),N=document.querySelector("#sortByDeadlineBtn");function T(t){console.log("clicketi"),console.log(e),t.preventDefault(),d?(e.sort((o,l)=>o.addedDate.localeCompare(l.addedDate)),d=!1):d===!1&&(e.sort((o,l)=>l.addedDate.localeCompare(o.addedDate)),d=!0),a(e),r(e)}function x(t){console.log(e),t.preventDefault(),u?(e.sort((o,l)=>o.task.localeCompare(l.task)),u=!1):u===!1&&(e.sort((o,l)=>l.task.localeCompare(o.task)),u=!0),a(e),r(e),console.log("klick")}function I(t){console.log("clicketiclick"),console.log(e),t.preventDefault(),f?(e.sort((o,l)=>l.deadline.localeCompare(o.deadline)),f=!1):f===!1&&(e.sort((o,l)=>o.deadline.localeCompare(l.deadline)),f=!0),a(e),r(e)}C.addEventListener("click",T);E.addEventListener("click",x);N.addEventListener("click",I);function r(t){localStorage.setItem("taskList",JSON.stringify(t)),a(t)}function O(){const t=localStorage.getItem("taskList");t&&(e=JSON.parse(t),a(e))}O();S.addEventListener("click",function(t){t.preventDefault(),B()});
