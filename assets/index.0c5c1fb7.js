(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))p(l);new MutationObserver(l=>{for(const c of l)if(c.type==="childList")for(const g of c.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&p(g)}).observe(document,{childList:!0,subtree:!0});function n(l){const c={};return l.integrity&&(c.integrity=l.integrity),l.referrerpolicy&&(c.referrerPolicy=l.referrerpolicy),l.crossorigin==="use-credentials"?c.credentials="include":l.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function p(l){if(l.ep)return;l.ep=!0;const c=n(l);fetch(l.href,c)}})();let o=[];const k=document.querySelector(".tasks"),a=document.querySelector("#inputTaskField"),i=document.querySelector("#deadlineInput"),L=document.querySelector("#submit"),h=document.querySelector("#sortSection"),S=document.querySelector("#taskError"),v=new Date,D=document.querySelector("#todaysDate");D.innerHTML=v.toLocaleDateString();function B(){if(a.value.length===0||i.value===""){S.innerHTML="Fyll i Todo & deadline!";return}else if(a.value.length>=2&&i!=""){console.log(o.indexOf),S.innerHTML="";const e=document.querySelector("input[name='category']:checked").value;let t={task:a.value,deadline:i.value,addedDate:v.toString(),category:e,isComplete:!1};o.push(t),s(o),a.value="",i.value=""}}function r(e){k.innerHTML="";for(let t=0;t<e.length;t++){const n=e[t].isComplete?"checked":"";k.innerHTML+=`
        <li data-id="${t}"> <div class="licontainer">
        <label for= "${e[t].task}">
        <input type="checkbox" ${n} name="checkbox" class="checkbox"data-id="${t}">
        <span class="text" id="texttodo">${e[t].task}</span><br>
        <span class="text"> ${e[t].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined category">${e[t].category}</span>
        <button class="material-symbols-outlined" data-id="${t}">close</button>
        </div>
        </li>`}C(),b()}function b(){Array.from(document.querySelectorAll(".tasks button")).forEach(n=>{n.addEventListener("click",E)}),Array.from(document.querySelectorAll(".tasks input")).forEach(n=>{n.addEventListener("change",T)})}function T(e){e.target.checked?(console.log("The checkbox is checked"),e.currentTarget.parentElement.classList.add("colorchange"),m=!m):(console.log("The checkbox is not checked"),e.currentTarget.parentElement.classList.remove("colorchange")),q()}let m=!1;function q(){console.log(o.findIndex(e=>e.isComplete===!0)),(m=!m)?console.log("still false"):console.log("true"),console.log(o)}function C(){o.length<=1&&h.classList.remove("open"),o.length>=2&&h.classList.add("open")}function E(e){const t=e.currentTarget.dataset.id;t>-1&&(o.splice(t,1),r(o)),s(o)}let d=!0,u=!0,f=!0;const x=document.querySelector("#sortByDateBtn"),I=document.querySelector("#sortByNameBtn"),N=document.querySelector("#sortByDeadlineBtn");function $(e){console.log("clicketi"),console.log(o),e.preventDefault(),d?(o.sort((t,n)=>t.addedDate.localeCompare(n.addedDate)),d=!1):d===!1&&(o.sort((t,n)=>n.addedDate.localeCompare(t.addedDate)),d=!0),r(o),s(o)}function M(e){console.log(o),e.preventDefault(),u?(o.sort((t,n)=>t.task.localeCompare(n.task)),u=!1):u===!1&&(o.sort((t,n)=>n.task.localeCompare(t.task)),u=!0),r(o),s(o)}function O(e){console.log("clicketiclick"),console.log(o),e.preventDefault(),f?(o.sort((t,n)=>n.deadline.localeCompare(t.deadline)),f=!1):f===!1&&(o.sort((t,n)=>t.deadline.localeCompare(n.deadline)),f=!0),r(o),s(o)}x.addEventListener("click",$);I.addEventListener("click",M);N.addEventListener("click",O);function s(e){localStorage.setItem("taskList",JSON.stringify(e)),r(e)}function A(){const e=localStorage.getItem("taskList");e&&(o=JSON.parse(e),r(o))}A();const w=document.querySelector("body"),y=document.querySelector(".light-mode-icon");y.addEventListener("click",()=>{w.classList.toggle("change")?y.textContent="dark_mode":y.textContent="light_mode"});L.addEventListener("click",function(e){e.preventDefault(),B()});
