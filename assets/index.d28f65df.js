(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const l of n)if(l.type==="childList")for(const y of l.addedNodes)y.tagName==="LINK"&&y.rel==="modulepreload"&&r(y)}).observe(document,{childList:!0,subtree:!0});function c(n){const l={};return n.integrity&&(l.integrity=n.integrity),n.referrerpolicy&&(l.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?l.credentials="include":n.crossorigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function r(n){if(n.ep)return;n.ep=!0;const l=c(n);fetch(n.href,l)}})();let t=[];const p=document.querySelector(".tasks"),i=document.querySelector("#inputTaskField"),d=document.querySelector("#deadlineInput"),S=document.querySelector("#submit"),g=document.querySelector("#sortSection"),k=document.querySelector("#taskError"),h=new Date,v=document.querySelector("#todaysDate");v.innerHTML=h.toLocaleDateString();I();function D(){if(i.value.length===0||d.value===""){k.innerHTML="Fyll i Todo & deadline!";return}else if(i.value.length>=2&&d!=""){console.log(t.indexOf),k.innerHTML="";const e=document.querySelector("input[name='category']:checked").value;let o={task:i.value,deadline:d.value,addedDate:h.toString(),category:e,isComplete:!1};t.push(o),s(t),i.value="",d.value=""}}function a(e){p.innerHTML="";for(let r=0;r<e.length;r++){const n=e[r].isComplete?"checked":"";p.innerHTML+=`
        <li data-id="${r}"> <div class="licontainer">
        <input type="checkbox" ${n} name="checkbox" class="checkbox"data-id="${r}">
        <span class="text" id="texttodo">${e[r].task}</span><br>
        <span class="text"> ${e[r].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined category">${e[r].category}</span>
        <button class="material-symbols-outlined" data-id="${r}">close</button>
        </div>
        </li>`}console.log(e),B(),Array.from(document.querySelectorAll(".tasks button")).forEach(r=>{r.addEventListener("click",T)}),Array.from(document.querySelectorAll(".tasks input")).forEach(r=>{r.addEventListener("change",L)})}function L(e){e.target.checked?(console.log("The checkbox is checked"),e.currentTarget.parentElement.classList.add("colorchange")):(console.log("The checkbox is not checked"),e.currentTarget.parentElement.classList.remove("colorchange"))}function B(){t.length<=1&&g.classList.remove("open"),t.length>=2&&g.classList.add("open")}function T(e){const o=e.currentTarget.dataset.id;o>-1&&(t.splice(o,1),a(t)),s(t)}let u=!0,f=!0,m=!0;const b=document.querySelector("#sortByDateBtn"),q=document.querySelector("#sortByNameBtn"),E=document.querySelector("#sortByDeadlineBtn");function x(e){console.log("clicketi"),console.log(t),e.preventDefault(),u?(t.sort((o,c)=>o.addedDate.localeCompare(c.addedDate)),u=!1):u===!1&&(t.sort((o,c)=>c.addedDate.localeCompare(o.addedDate)),u=!0),a(t),s(t)}function C(e){console.log(t),e.preventDefault(),f?(t.sort((o,c)=>o.task.localeCompare(c.task)),f=!1):f===!1&&(t.sort((o,c)=>c.task.localeCompare(o.task)),f=!0),a(t),s(t),console.log("klick")}function N(e){console.log("clicketiclick"),console.log(t),e.preventDefault(),m?(t.sort((o,c)=>c.deadline.localeCompare(o.deadline)),m=!1):m===!1&&(t.sort((o,c)=>o.deadline.localeCompare(c.deadline)),m=!0),a(t),s(t)}b.addEventListener("click",x);q.addEventListener("click",C);E.addEventListener("click",N);function s(e){localStorage.setItem("taskList",JSON.stringify(e)),a(e)}function I(){const e=localStorage.getItem("taskList");e&&(t=JSON.parse(e),a(t))}S.addEventListener("click",function(e){e.preventDefault(),D()});
