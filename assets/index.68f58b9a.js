(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const c of o)if(c.type==="childList")for(const d of c.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&t(d)}).observe(document,{childList:!0,subtree:!0});function r(o){const c={};return o.integrity&&(c.integrity=o.integrity),o.referrerpolicy&&(c.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?c.credentials="include":o.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function t(o){if(o.ep)return;o.ep=!0;const c=r(o);fetch(o.href,c)}})();let n=[];const f=document.querySelector(".tasks");document.querySelector(".done");const a=document.querySelector("#inputTaskField"),m=document.querySelector("#deadlineInput"),h=document.querySelector("#submit"),p=document.querySelector("#sortSection"),g=new Date,S=document.querySelector("#todaysDate");S.innerHTML=g.toLocaleDateString();const y=document.getElementsByClassName("material-symbols-outlined");for(var u=0;u<y.length;u++)y[u].addEventListener("click",function(){this.classList.add("check")});function v(){if(a.value.length!==0&&n.indexOf(a.value)===-1){const e=document.querySelector("input[name='category']:checked").value,s={task:a.value,deadline:m.value,addedDate:g,category:e,isComplete:!1};n.push(s),k(n),a.value="",m.value=""}}console.log(n);function i(e){f.innerHTML="";for(let t=0;t<e.length;t++)f.innerHTML+=`
        <li data-id="${t}"> <div>
        <input type="checkbox" name="checkbox" class="checkbox" data-id="${t}" ${e[t].isComplete}>
        <span class="text" id="texttodo">${e[t].task}</span><br>
        <span class="text">deadline: ${e[t].deadline}</span></div><div class="rightsection">
        <span class="material-symbols-outlined" id="favorite">${e[t].category}</span>
        <button class="material-symbols-outlined" data-id="${t}">close</button>
        </div>
        </li>`;b(),Array.from(document.querySelectorAll(".tasks button")).forEach(t=>{t.addEventListener("click",q)}),Array.from(document.querySelectorAll(".tasks input")).forEach(t=>{t.addEventListener("click",L)})}function L(e){this.checked===!1&&e.currentTarget.parentElement.classList.remove("checked"),this.checked===!0&&e.currentTarget.parentElement.classList.add("checked"),console.log("click",e.currentTarget.dataset.id),console.log(n)}function b(){n.length<=1&&p.classList.remove("open"),n.length>=2&&p.classList.add("open")}function k(e){localStorage.setItem("taskList",JSON.stringify(e)),i(e)}function T(){const e=localStorage.getItem("taskList");e&&(n=JSON.parse(e),i(n))}T();function q(e){const s=e.currentTarget.dataset.id;s>-1&&(n.splice(s,1),i(n)),k(n)}h.addEventListener("click",function(e){e.preventDefault(),v()});let l=!0;const E=document.querySelector("#sortByNameBtn");E.addEventListener("click",N);function N(e){e.preventDefault(),l?(n.sort((s,r)=>s.task.localeCompare(r.task)),l=!1):l===!1&&(n.sort((s,r)=>r.task.localeCompare(s.task)),l=!0),i(n),console.log("klick")}
